- Remove the concept of proxy style (no-one should create 3rd party styles using native style)
- Remove versioning of QStyleOption (this is private a private construct)
- Do we need QStyleOption at all? What about just using the control as argument?
    - adding the syncStyleOption step is really just overhead. The widget requirement
        that you can use the style to draw whatever onto whichever widget is not valid here.
    - current strategy is to keep styleoption for now to get things upnrunning without too
        much refactoring. Then substitue styleoption in the API for a QQuickControl instead.
        (or, if we still need some extra API in styleoption that does not fit in a
         QQuickControl, just make QStyleOption contain much less (e.g not rect, palette etc).
- Investigate remove qnativestyle_p.h (only contains caching functions?)
- Use class member initialization rather than constructor initialization
- There is already a Fusion style in controls. Should we create a new FusionDesktop style?

